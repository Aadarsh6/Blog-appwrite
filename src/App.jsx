import { useEffect, useState } from 'react'
import { useDispatch } from 'react-redux'
import authService from './appWrite/auth'
import { login, logout } from './store/authSlice'
import { Header, Footer } from './Component/index'
import { Outlet } from 'react-router-dom'


const App = () => {
const [loading , setLoading] = useState(true)
const dispatch = useDispatch() //“Hey Redux, here’s what just happened — please update the state!”


useEffect(()=>{
  authService.getCurrentUser()
  .then((userData)=>{
    if(userData){
      dispatch(login({userData}))      // dispatch() is a function that sends an action to the Redux store.
    }else{                            // Actions describe what happened — in this case either "login" or "logout".
                                     // The login and logout functions come from your Redux slice's actions, generated by createSlice.
                                    // When you call dispatch(login({userData})), Redux receives an action like:
      dispatch(logout())
    }
  })
  .catch((e)=>{
    console.log("Error while loading backend", e);
    
  })
  .finally(()=> setLoading(false))

},[])

if (loading) {
    return (
      <div className="h-screen flex justify-center items-center bg-gray-100">
        <p className="text-lg text-gray-700">Loading...</p>
      </div>
    );
  }

return (
  <div className="min-h-screen flex items-center justify-center bg-gradient-to-b from-gray-900 via-gray-800 to-gray-900 text-gray-100 font-sans">
    <div className="text-center space-y-8 bg-gray-800 border border-gray-700 shadow-xl rounded-2xl p-10 w-full max-w-3xl">
      <Header />
      <div >
        <Outlet />
      </div>
      <Footer />
    </div>
  </div>
);


}
export default App;